# GoReleaser configuration for ghub-desk
# Documentation: https://goreleaser.com

version: 2

project_name: ghub-desk

before:
  hooks:
    # Clean up dependencies
    - go mod tidy
    # Generate any necessary code
    - go generate ./...

builds:
  - id: ghub-desk
    main: ./main.go
    binary: ghub-desk
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    # Build with version information
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}

archives:
  - id: default
    # Archive naming template
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - README.md
      - LICENSE*
      - Makefile

checksum:
  name_template: 'checksums.txt'

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^chore:"
      - "merge conflict"
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'Bug fixes'
      regexp: '^.*?bug(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: Others
      order: 999

release:
  github:
    owner: takihito
    name: ghub-desk
  draft: false
  prerelease: auto
  name_template: "{{.ProjectName}} v{{.Version}}"
  footer: |
    ## Installation

    ### Using Go
    ```bash
    go install github.com/takihito/ghub-desk@latest
    ```

    ### Binary Download
    Download the appropriate binary for your platform from the assets above.

    ---

    **Full Changelog**: https://github.com/takihito/ghub-desk/compare/{{ .PreviousTag }}...{{ .Tag }}
    
    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).
